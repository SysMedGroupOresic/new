colnames(rs)[colnames(rs)=="T-Epi-T"]="T/Epi-T"
rownames(rs)[rownames(rs)=="Steatosis.Grade"]="Steatosis Grade"
rownames(rs)[rownames(rs)=="Fibrosis.Stage"]="Fibrosis Stage"
rownames(rs)[rownames(rs)=="HOMA.IR"]="HOMA-IR"
covas[covas=="Steatosis.Grade"]="Steatosis Grade"
covas[covas=="Fibrosis.Stage"]="Fibrosis Stage"
covas[covas=="HOMA.IR"]="HOMA-IR"
heps=c(groups[,2]) #check that you have driven the steroid data vis file...
heps[heps=="17aOH-P4"]="17a-OHP4"
cme1=match(heps,colnames(rs))
cme2=match(c(covas,x3,x6),rownames(rs))
rs=rs[cme2,cme1]
rsa=rbind(rsa,rs) }
rs1a=rsa[1:dim(rs)[1],];
rs2a=rsa[(dim(rs1a)[1]+1):(dim(rs1a)[1]+dim(rs1a)[1]),]
rs1=rs1a;rs2=rs2a
rownames(rs2)=str_sub(rownames(rs2), end = -2)
rownames(rs1) <- gsub("\\.", " ", rownames(rs1))
rownames(rs2) <- gsub("\\.", " ", rownames(rs2))
rownames(rs1)[rownames(rs1)=="HOMA IR"]="HOMA-IR";rownames(rs2)[rownames(rs2)=="HOMA IR"]="HOMA-IR"
rownames(rs1)[rownames(rs1)=="Gender"]="HOMA-IR";rownames(rs2)[rownames(rs2)=="HOMA IR"]="HOMA-IR"
rango = function(x,mi,ma) {(ma-mi)/(max(x)-min(x))*(x-min(x))+mi}
rs1 <- mutate_all(rs1, function(x) as.numeric(as.character(x)))
rs2 <- mutate_all(rs2, function(x) as.numeric(as.character(x)))
# rs1=rango(rs1,-0.5,0.5) #check this if needed
rs1=as.matrix(rs1)
rs2=as.matrix(rs2)
width=2500; height=4400
order="original"; range='orig';corre='no_renorm'; type='full'; method='color';#ga='All';gf='Female';gm='Male' #color square
cl.offset=1.0;cl.length=5;cl.cex = 0.6;pch.cex=0.6;pch=10;cl.pos = 'n';#cl.pos = 'b' ;#pch.cex=0.95,1.3; height=6300; pos 'b' cl.pos = 'b'
ho=Group;hip1='BAs_lipids_as_y vs. steroids_as_x'
# https://www.rdocumentation.org/packages/corrplot/versions/0.94/topics/corrplot
# Oh! https://www.tidyverse.org/blog/2020/08/taking-control-of-plot-scaling/
# https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing
#I have driven these separately for html:
# for that you need:
jpeg(paste("Linear Model Estimate Plot ofe",hip1,Group,".jpg"), width = width, height = height, quality = 100,pointsize = 16, res=300);
hepio=colorRampPalette(c('blue', 'white','orange'), alpha = TRUE)(150) #rev(COL2('RdBu')[25:(length(COL2('RdBu'))-25)])
corrplot(rs1, type = type, order = order,method=method, p.mat=rs2, tl.col = "black", cl.cex = cl.cex,pch.cex=pch.cex,pch.col='black',pch=pch, ,sig.level = c(.001, .01, .05),cl.pos = 'n',
insig = "label_sig",cl.offset=cl.offset,cl.length=cl.length,tl.cex=0.5, tl.srt = 90, diag = TRUE,#tl.pos='n'
col = colorRampPalette(c('blue', 'white','orange'), alpha = TRUE)(100) ,is.corr = TRUE); #https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html#change-color-spectra-color-legend-and-text-legend
dev.off()  #,is.corr = FALSE
#
#https://stackoverflow.com/questions/26574054/how-to-change-font-size-of-the-correlation-coefficient-in-corrplot
#https://stackoverflow.com/questions/9543343/plot-a-jpg-image-using-base-graphics-in-r
#oh, classical: https://forum.posit.co/t/r-markdown-html-document-doesnt-show-image/41629/2
} else {
rsa=c();rs1=c();rs2=c()
c1=hoi[,1] %in% x5
hoi[c1,] # This gives you the PFAS (x5) ok. Tää tulee suoraan tällä PFAS 7:lle ekalle
c2=hoi[,1] %in% names(table(hoi[,1]))[!names(table(hoi[,1])) %in% c(x3,x5,x6)] #vaikeemman kautta
hyy=c1 & c2
hoi2=hoi[c2 | c1 ,] #Likewise...
rownames(hoi2)=1:dim(hoi2)[1]
hoi2=hoi2[1:182,]
a=hoi2[1:42,1];b=hoi2[1:42,2]
hoi2[1:42,]=cbind(b,a,hoi2[1:42,3:5])
hoi2=hoi2[,c(2,1,3:5)]
i=4;
rse=c()
for (i in 4:5) {
rse=hoi2[,c(1,2,i)]
rse=rse[order(rse[,1]),]
rs=reshape(rse,idvar="x",timevar="y",direction="wide")
rownames(rs)=rs[,1]
rs=rs[,-1]
library(stringr)
colnames(rs)=str_sub(colnames(rs),3,-1)
colnames(rs) <- gsub("\\.", "-", colnames(rs))
colnames(rs) <- gsub("X11", "11", colnames(rs))
colnames(rs) <- gsub("X17", "17", colnames(rs))
colnames(rs)[colnames(rs)=="T-Epi-T"]="T/Epi-T"
colnames(rs)[colnames(rs)=="T-E-T"]="T/Epi-T"
colnames(rs)[colnames(rs)=="Steatosis-Grade"]="Steatosis Grade"
colnames(rs)[colnames(rs)=="Fibrosis-Stage"]="Fibrosis Stage"
colnames(rs)[colnames(rs)=="17aOH-P4"]="17a-OHP4"
heps=c(covas,groups[,2])
heps <- gsub("\\.", " ", heps)
heps[heps=="HOMA IR"]="HOMA-IR"
heps[heps=="17aOH-P4"]="17a-OHP4"
ccc=match(heps,colnames(rs))
rs=rs[,ccc]
rsa=rbind(rsa,rs)
}
rs1a=rsa[1:7,];
rs2a=rsa[8:14,]
rs1=rs1a;rs2=rs2a
width=5500; height=2300
order="original"; range='orig';corre='no_renorm'; type='full'; method='color'; #ga='All';gf='Female';gm='Male' #color square
cl.offset=1.0;cl.length=5;cl.cex = 1.05;pch.cex=1.05;pch=20;cl.pos = 'r';#cl.pos = 'b' ;#pch.cex=0.95,1.3; height=6300; pos 'b' cl.pos = 'b'
ho=Group; hip1='Steroids_y vs. PFAS_as_x'
rs1 <- mutate_all(rs1, function(x) as.numeric(as.character(x)))
rs2 <- mutate_all(rs2, function(x) as.numeric(as.character(x)))
# rs1=rango(rs1,-0.5,0.5) #check if needed
rs1=as.matrix(rs1)
rs2=as.matrix(rs2)
order="original"; range='orig';corre='no_renorm'; type='full'; method='color'; #ga='All';gf='Female';gm='Male' #color square
cl.offset=1.0;cl.length=5;cl.cex = 1.4;pch.cex=1.5;pch=20;cl.pos = 'r';#cl.pos = 'b' ;#pch.cex=0.95,1.3; height=6300; pos 'b' cl.pos = 'b'
ho=Group;hip1='Steroids_y vs. PFAS_as_x'
#I have driven these separately for html:
jpeg(paste("Linear Model Estimate Plot of_s",hip1,Group,".jpg"), width = width, height = height, quality = 100,pointsize = 16, res=300);
corrplot(rs1, type = type, order = order,method=method, p.mat=rs2, tl.col = "black", cl.cex = cl.cex,pch.cex=pch.cex,pch.col='black',pch=pch,
sig.level = c(.001, .01, .05),cl.pos =  'n', insig = "label_sig",cl.offset=cl.offset,cl.length=cl.length, tl.cex=0.8, #tl.pos='n',
tl.srt = 90, diag = TRUE,col = colorRampPalette(c('blue','white', 'orange'), alpha = TRUE)(100),is.corr = TRUE);
# https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html#change-color-spectra-color-legend-and-text-legend
dev.off()
#,is.corr = FALSE
}
# https://scales.arabpsychology.com/stats/how-to-remove-the-last-character-from-a-string-in-r-2-examples/
return(list(hopiu))
}
# The scaling here just in case:
rango = function(x,mi,ma) {(ma-mi)/(max(x)-min(x))*(x-min(x))+mi}
#To apply to all groups at one go:
huus=function(tv,adj,sig.level,sick,sick_group,joo) {
huus=c();huusa=c();heijaa=c('All','female','male'); ok=c('big','small')  ; jj=c()
hyp=1;hrt=1;oo="C:/Users/patati/Documents/GitHub/new/lme/"
for (hyp in 1:2) {
for (hrt in 1:3) {
# the_funal=function(tv,Group,ok,aa,bb,fn,adj)
huus=append(huus,the_funal(tv,heijaa[hrt],ok[hyp],fn,adj,sig.level,sick,sick_group,joo))}}
return(huus)}
# Driving the function with the parameters as follows:
adj='nook'; sig.level=c(.001,0.01, 0.05); sick='no'; joo='joo' #sickGroup..
metanorm_S_non_fdr=huus(tv_all,adj,sig.level,sick,sick_group,joo)
knitr::include_graphics("Linear Model Estimate Plot of BAs_lipids_as_y vs. steroids_as_x All .jpg")
knitr::include_graphics("Linear Model Estimate Plot of BAs_lipids_as_y vs. steroids_as_x female .jpg")
knitr::include_graphics("Linear Model Estimate Plot of BAs_lipids_as_y vs. steroids_as_x male .jpg")
knitr::include_graphics("Linear Model Estimate Plot of Steroids_y vs. PFAS_as_x All .jpg")
knitr::include_graphics("Linear Model Estimate Plot of Steroids_y vs. PFAS_as_x female .jpg")
#fig.cap="Linear Model Estimates between Steroids and Variables"
knitr::include_graphics("Linear Model Estimate Plot of Steroids_y vs. PFAS_as_x male .jpg")
# [1] "Linear Model Estimate Plot of BAs_lipids_as_y vs. steroids_as_x All .jpg"
# [2] "Linear Model Estimate Plot of BAs_lipids_as_y vs. steroids_as_x female .jpg"
# [3] "Linear Model Estimate Plot of BAs_lipids_as_y vs. steroids_as_x male .jpg"
# [4] "Linear Model Estimate Plot of Steroids_y vs. PFAS_as_x All .jpg"
# [5] "Linear Model Estimate Plot of Steroids_y vs. PFAS_as_x female .jpg"
# [6] "Linear Model Estimate Plot of Steroids_y vs. PFAS_as_x male .jpg"
# This should be as good as it gets... eli  maksimilla vedetään... eli pitäis olla ok, sillä skaalattu vastaa korrelaatiota tss. skaalaus vielä miehiin...
the_fun_figs=function(tv_all,Group,hopiu,aa,bb,fn) { #  ok,aa,bb
if (Group=='male') {NAFLDo=tv_all[tv_all[,'Gender']==max(tv_all[,'Gender']),]} else if (Group=='female')
{NAFLDo=tv_all[tv_all[,'Gender']==min(tv_all[,'Gender']),]} else if (Group=='All') {NAFLDo=tv_all}
SG0=NAFLDo[,c(2:dim(tv_all)[2])]
#https://stackoverflow.com/questions/10688137/how-to-fix-spaces-in-column-names-of-a-data-frame-remove-spaces-inject-dots
oknames=colnames(SG0)
SG0=data.frame(SG0)
colnames(SG0)
colnames(SG0[,8:27]) <- gsub("-", ".", colnames(SG0[,8:27]))
colnames(SG0[,8:27]) <- gsub("/", ".", colnames(SG0[,8:27]))
hesh=c()
xnam <- colnames(SG0)[c(4:7)]
Treatment=colnames(tv_all)[52:58];
y <- Treatment;#colnames(SG0)[c(70:76)]
TreatmentN=Treatment
# Group='All'
j=1;i=1;p.val=c()
for (i in 1:length(xnam)) {
for (j in 1:length(y)) {
# https://gettinggeneticsdone.blogspot.com/2011/01/rstats-function-for-extracting-f-test-p.html
hösh=hopiu[hopiu[,1]==y[j] & hopiu[,2]==xnam[i] & hopiu[,3]==Group,]
# #printtaus tässä...
jeps=SG0#
r=as.numeric(hösh[4][1,])
p.val=as.numeric(hösh[5][1,])
rsadj=as.numeric(hösh[6][1,])
colnames(jeps)=colnames(tv_all)[2:dim(tv_all)[2]]
Treatment=as.character(hösh[2][1,])
Mediator=as.character(hösh[1][1,])
Mediator <- gsub("\\.", "-", Mediator)
Mediator <- gsub("X", "", Mediator)
if (Mediator=="T-Epi-T") {Mediator[Mediator=="T-Epi-T"]="T/Epi-T"}
Treatment2=Treatment
colnames(jeps)[colnames(jeps) == 'HOMA-IR']='HOMA.IR'
colnames(jeps) <- gsub(" ", "\\.", colnames(jeps))
main_dir <- paste0(c("C://Users//patati//Desktop//TurkuOW//RWork//",fn,Group,"/"),collapse="")# setting up the sub directory
sub_dir <-Treatment #paste0(c("\\",Treatment),collapse="")#Treatment2[i] # check if sub directory exists: #https://www.geeksforgeeks.org/r-check-if-a-directory-exists-and-create-if-it-does-not/
if (file.exists(file.path(main_dir, sub_dir))){setwd(file.path(main_dir, sub_dir))} else {dir.create(file.path(main_dir, sub_dir)); setwd(file.path(main_dir, sub_dir))}
if (Mediator!="T/Epi-T") {jpeg(paste("Correlations plotted",Group,Treatment2,Mediator,".jpg"), width = 1000, height = 1000, quality = 100,pointsize = 20, res=300);} else {
jpeg(paste("Correlations plotted_alle",Treatment2,'T.Epi.T',".jpg"), width = 1000, height = 1000, quality = 100,pointsize = 20, res=300);}
# equation1=function(x){coef(poissone)[2]*x+coef(poissone)[1]+coef(poissone)[3]}
xcx=jeps[,Treatment];
ycy=jeps[,Mediator];väh=round(sd(ycy)/2,2)
a=ggplot(jeps, aes(y=ycy, x=xcx)) +
geom_point() +
xlab(Treatment) +
ylab(Mediator) +
# stat_function(fun=equation1,geom="line",color='black')+
geom_smooth(method="lm",col="black") + #https://ggplot2.tidyverse.org/reference/geom_smooth.html
annotate("text", x=min(xcx),y=max(ycy),hjust=0,vjust=0, label=paste0("r = ", round(r,5))) +
annotate("text", x=min(xcx),y=max(ycy)-väh,hjust=0,vjust=0, label=paste0("p = ", round(p.val, 5))) +
theme_classic()
print(a)
dev.off()
}}
# getwd()
j=1;i=1; rm(xnam,y)
xnam <- colnames(SG0)[c(2)]
y <- TreatmentN#colnames(SG0)[c(70:76)]
for (i in 1:length(xnam)) {
for (j in 1:length(y)) {
# https://gettinggeneticsdone.blogspot.com/2011/01/rstats-function-for-extracting-f-test-p.html
hösh=hopiu[hopiu[,1]==y[j] & hopiu[,2]==xnam[i] & hopiu[,3]==Group,]
# #printtaus tässä...
jeps=SG0#
r=as.numeric(hösh[4][1,])
p.val=as.numeric(hösh[5][1,])
rsadj=as.numeric(hösh[6][1,])
colnames(jeps)=colnames(tv_all)[2:dim(tv_all)[2]]
Treatment=as.character(hösh[2][1,])
Mediator=as.character(hösh[1][1,])
rm(hösh)
Mediator <- gsub("\\.", "-", Mediator)
Mediator <- gsub("X", "", Mediator)
if (Mediator=="T-Epi-T") {Mediator[Mediator=="T-Epi-T"]="T/Epi-T"}
colnames(jeps)[colnames(jeps) == 'HOMA-IR']='HOMA.IR'
colnames(jeps) <- gsub(" ", "\\.", colnames(jeps))
main_dir <- paste0(c("C://Users//patati//Desktop//TurkuOW//RWork//",fn,Group,"/"),collapse="")
# main_dir <- "C://Users//patati//Desktop//TurkuOW//RWork//males2/"# setting up the sub directory
sub_dir <-Treatment#paste0(c("\\",Treatment),collapse="")#Treatment2[i] # check if sub directory exists: #https://www.geeksforgeeks.org/r-check-if-a-directory-exists-and-create-if-it-does-not/
if (file.exists(file.path(main_dir, sub_dir))){setwd(file.path(main_dir, sub_dir))} else {dir.create(file.path(main_dir, sub_dir)); setwd(file.path(main_dir, sub_dir))}
if (Mediator!="T/Epi-T") {jpeg(paste("Correlations plotted",Group,Treatment2,Mediator,".jpg"), width = 1000, height = 1000, quality = 100,pointsize = 20, res=300);} else{
jpeg(paste("Correlations plotted",Treatment2,'T.Epi.T',".jpg"), width = 1000, height = 1000, quality = 100,pointsize = 20, res=300);}
xcx=jeps[,Treatment];
ycy=jeps[,Mediator];väh=round(sd(ycy)/2,2)
a=ggplot(jeps, aes(y=ycy, x=xcx)) +
geom_point() +
xlab(Treatment) +
ylab(Mediator) +
geom_smooth(method="lm",col="black") + #https://ggplot2.tidyverse.org/reference/geom_smooth.html
annotate("text", x=min(xcx),y=max(ycy),hjust=0,vjust=0, label=paste0("r = ", round(r,4))) +
annotate("text", x=min(xcx),y=max(ycy)-väh,hjust=0,vjust=0, label=paste0("p = ", round(p.val, 5))) +
theme_classic()
print(a)
dev.off()
hesh=rbind(hesh,c(y[j],xnam[i],Group,r,p.val,rsadj))
}}
j=1;i=1; #rm(xnam,y)
xnam <- colnames(SG0)[c(3)];y <- TreatmentN#colnames(SG0)[c(70:76)]
for (i in 1:length(xnam)) {
for (j in 1:length(y)) {
# #https://stats.stackexchange.com/questions/190763/how-to-decide-which-glm-family-to-use
hösh=hopiu[hopiu[,1]==y[j] & hopiu[,2]==xnam[i] & hopiu[,3]==Group,]
# #printtaus tässä...
jeps=SG0#
# rm(r,p.val,rsadj)
r=as.numeric(hösh[4][1,])
p.val=as.numeric(hösh[5][1,])
rsadj=as.numeric(hösh[6][1,])
colnames(jeps)=colnames(tv_all)[2:dim(tv_all)[2]]
Treatment=as.character(hösh[2][1,])
Mediator=as.character(hösh[1][1,])
rm(hösh)
Mediator <- gsub("\\.", "-", Mediator)
Mediator <- gsub("X", "", Mediator)
if (Mediator=="T-Epi-T") {Mediator[Mediator=="T-Epi-T"]="T/Epi-T"}
Treatment2=Treatment
colnames(jeps)[colnames(jeps) == 'HOMA-IR']='HOMA.IR'
colnames(jeps) <- gsub(" ", "\\.", colnames(jeps))
main_dir <- paste0(c("C://Users//patati//Desktop//TurkuOW//RWork//",fn,Group,"/"),collapse="")
# main_dir <- "C://Users//patati//Desktop//TurkuOW//RWork//males2/"# setting up the sub directory
sub_dir <-Treatment#paste0(c("\\",Treatment),collapse="")#Treatment2[i] # check if sub directory exists: #https://www.geeksforgeeks.org/r-check-if-a-directory-exists-and-create-if-it-does-not/
if (file.exists(file.path(main_dir, sub_dir))){setwd(file.path(main_dir, sub_dir))} else {dir.create(file.path(main_dir, sub_dir)); setwd(file.path(main_dir, sub_dir))}
if (Mediator!="T/Epi-T") {jpeg(paste("Correlations plotted_alle",Treatment2,Mediator,".jpg"), width = 1000, height = 1000, quality = 100,pointsize = 20, res=300);} else{
jpeg(paste("Correlations plotted",Treatment2,'T.Epi.T',".jpg"), width = 1000, height = 1000, quality = 100,pointsize = 20, res=300);}
xcx=jeps[,Treatment];
ycy=jeps[,Mediator];väh=round(sd(ycy)/2,2)
a=ggplot(jeps, aes(y=ycy, x=xcx)) +
geom_point() +
xlab(Treatment) +
ylab(Mediator) +
# stat_function(fun=equation1,geom="line",color='black')+
geom_smooth(method="lm",col="black") + #https://ggplot2.tidyverse.org/reference/geom_smooth.html
annotate("text", x=min(xcx),y=max(ycy),hjust=0,vjust=0, label=paste0("r = ", round(r,5))) +
annotate("text", x=min(xcx),y=max(ycy)-väh,hjust=0,vjust=0, label=paste0("p = ", round(p.val, 5))) +
theme_classic()
print(a)
dev.off()
}}
j=1;i=1; #rm(xnam,y)
xnam <- TreatmentN#colnames(SG0)[c(70:76)]#paste("x", 1:25, sep="") 28:length(colnames(SG0)
y = colnames(SG0[,8:27])
for (i in 1:length(xnam)) {
for (j in 1:length(y)) {
# https://gettinggeneticsdone.blogspot.com/2011/01/rstats-function-for-extracting-f-test-p.html
hösh=hopiu[hopiu[,1]==y[j] & hopiu[,2]==xnam[i] & hopiu[,3]==Group,]
# #printtaus tässä...
jeps=SG0#
rm(r,p.val,rsadj)
r=as.numeric(hösh[4][1,])
p.val=as.numeric(hösh[5][1,])
rsadj=as.numeric(hösh[6][1,])
colnames(jeps)=colnames(tv_all)[2:dim(tv_all)[2]]
Treatment=as.character(hösh[2][1,])
Mediator=as.character(hösh[1][1,])
rm(hösh)
Mediator <- gsub("\\.", "-", Mediator)
Mediator <- gsub("X", "", Mediator)
if (Mediator=="T-Epi-T") {Mediator[Mediator=="T-Epi-T"]="T/Epi-T"}
Treatment2=Treatment
colnames(jeps)[colnames(jeps) == 'HOMA-IR']='HOMA.IR'
colnames(jeps) <- gsub(" ", "\\.", colnames(jeps))
main_dir <- paste0(c("C://Users//patati//Desktop//TurkuOW//RWork//",fn,Group,"/"),collapse="")
sub_dir <-Treatment#paste0(c("\\",Treatment),collapse="")#Treatment2[i] # check if sub directory exists: #https://www.geeksforgeeks.org/r-check-if-a-directory-exists-and-create-if-it-does-not/
if (file.exists(file.path(main_dir, sub_dir))){setwd(file.path(main_dir, sub_dir))} else {dir.create(file.path(main_dir, sub_dir)); setwd(file.path(main_dir, sub_dir))}
if (Mediator!="T/Epi-T") {jpeg(paste("Correlations plotted",Group,Treatment2,Mediator,".jpg"), width = 1000, height = 1000, quality = 100,pointsize = 20, res=300);} else{
jpeg(paste("Correlations plotted",Treatment2,'T.Epi.T',".jpg"), width = 1000, height = 1000, quality = 100,pointsize = 20, res=300);}
xcx=jeps[,Treatment];
ycy=jeps[,Mediator];väh=round(sd(ycy)/2,2)
a=ggplot(jeps, aes(y=ycy, x=xcx)) +
geom_point() +
xlab(Treatment) +
ylab(Mediator) +
# stat_function(fun=equation1,geom="line",color='black')+
geom_smooth(method="lm",col="black") + #https://ggplot2.tidyverse.org/reference/geom_smooth.html
annotate("text", x=min(xcx),y=max(ycy),hjust=0,vjust=0, label=paste0("r = ", round(r,4))) +
annotate("text", x=min(xcx),y=max(ycy)-väh,hjust=0,vjust=0, label=paste0("p = ", round(p.val, 5))) +
theme_classic()
print(a)
dev.off()
}}
# Eli 'kaksi' vielä tarvitaan...
# 1) BA/lipid=covar ja steroidit, ja 2) steroid=covar
#tai oikeastaan ehkä... steroid=covar ja steroid = BA/lipid
# # 1) (BA/lipid=covar ja steroids)
#https://stats.stackexchange.com/questions/190763/how-to-decide-which-glm-family-to-use
# # 1)  steroids=BA/lipid
j=1;i=1; #rm(xnam,y)
xnam <- c(x3,x6) # Group='All'
y <- c(colnames(SG0[,8:27])); #colnames(SG0)[c(4:7)]
for (i in 1:length(xnam)) {
for (j in 1:length(y)) {
hösh=hopiu[hopiu[,1]==y[j] & hopiu[,2]==xnam[i] & hopiu[,3]==Group,]
# #printtaus tässä...
jeps=SG0#
rm(r,p.val,rsadj)
r=as.numeric(hösh[4][1,])
p.val=as.numeric(hösh[5][1,])
rsadj=as.numeric(hösh[6][1,])
colnames(jeps)=colnames(tv_all)[2:dim(tv_all)[2]]
Treatment=as.character(hösh[2][1,])
Mediator=as.character(hösh[1][1,])
rm(hösh)
Mediator <- gsub("\\.", "-", Mediator)
Mediator <- gsub("X", "", Mediator)
if (Mediator=="T-Epi-T") {Mediator[Mediator=="T-Epi-T"]="T/Epi-T"}
Treatment2=Treatment
colnames(jeps)[colnames(jeps) == 'HOMA-IR']='HOMA.IR'
colnames(jeps) <- gsub(" ", "\\.", colnames(jeps))
main_dir <- paste0(c("C://Users//patati//Desktop//TurkuOW//RWork//",fn,Group,"/"),collapse="")
# main_dir <- "C://Users//patati//Desktop//TurkuOW//RWork//males2/"# setting up the sub directory
sub_dir <-Treatment#paste0(c("\\",Treatment),collapse="")#Treatment2[i] # check if sub directory exists: #https://www.geeksforgeeks.org/r-check-if-a-directory-exists-and-create-if-it-does-not/
if (file.exists(file.path(main_dir, sub_dir))){setwd(file.path(main_dir, sub_dir))} else {dir.create(file.path(main_dir, sub_dir)); setwd(file.path(main_dir, sub_dir))}
if (Mediator!="T/Epi-T") {jpeg(paste("Correlations plotted",Group,Treatment2,Mediator,".jpg"), width = 1000, height = 1000, quality = 100,pointsize = 20, res=300);} else{
jpeg(paste("Correlations plotted",Treatment2,'T.Epi.T',".jpg"), width = 1000, height = 1000, quality = 100,pointsize = 20, res=300);}
xcx=jeps[,Treatment];
ycy=jeps[,Mediator];väh=round(sd(ycy)/2,2)
a=ggplot(jeps, aes(y=ycy, x=xcx)) +
geom_point() +
xlab(Treatment) +
ylab(Mediator) +
geom_smooth(method="lm",col="black") + #https://ggplot2.tidyverse.org/reference/geom_smooth.html
annotate("text", x=min(xcx),y=max(ycy),hjust=0,vjust=0, label=paste0("r = ", round(r,5))) +
annotate("text", x=min(xcx),y=max(ycy)-väh,hjust=0,vjust=0, label=paste0("p = ", round(p.val, 5))) +
theme_classic()
print(a)
dev.off()
hesh=rbind(hesh,c(y[j],xnam[i],Group,r,p.val,rsadj))}}
# ja 2) steroid = covar
j=1;i=1; #rm(xnam,y)
xnam <- c('AGE','BMI',colnames(SG0)[c(4:7)]);
y <- c(colnames(SG0[,8:27])) # Group='All'
for (i in 1:length(xnam)) {
for (j in 1:length(y)) {
hösh=hopiu[hopiu[,1]==y[j] & hopiu[,2]==xnam[i] & hopiu[,3]==Group,]
# #printtaus tässä...
jeps=SG0#
rm(r,p.val,rsadj)
r=as.numeric(hösh[4][1,])
p.val=as.numeric(hösh[5][1,])
rsadj=as.numeric(hösh[6][1,])
colnames(jeps)=colnames(tv_all)[2:dim(tv_all)[2]]
Treatment=as.character(hösh[2][1,])
Mediator=as.character(hösh[1][1,])
rm(hösh)
Mediator <- gsub("\\.", "-", Mediator)
Mediator <- gsub("X", "", Mediator)
if (Mediator=="T-Epi-T") {Mediator[Mediator=="T-Epi-T"]="T/Epi-T"}
Treatment2=Treatment
colnames(jeps)[colnames(jeps) == 'HOMA-IR']='HOMA.IR'
colnames(jeps) <- gsub(" ", "\\.", colnames(jeps))
main_dir <- paste0(c("C://Users//patati//Desktop//TurkuOW//RWork//",fn,Group,"/"),collapse="")
# main_dir <- "C://Users//patati//Desktop//TurkuOW//RWork//males2/"# setting up the sub directory
sub_dir <-Treatment#paste0(c("\\",Treatment),collapse="")#Treatment2[i] # check if sub directory exists: #https://www.geeksforgeeks.org/r-check-if-a-directory-exists-and-create-if-it-does-not/
if (file.exists(file.path(main_dir, sub_dir))){setwd(file.path(main_dir, sub_dir))} else {dir.create(file.path(main_dir, sub_dir)); setwd(file.path(main_dir, sub_dir))}
if (Mediator!="T/Epi-T") {jpeg(paste("Correlations plotted",Group,Treatment2,Mediator,".jpg"), width = 1000, height = 1000, quality = 100,pointsize = 20, res=300);} else{
jpeg(paste("Correlations plotted_",Treatment2,'T.Epi.T',".jpg"), width = 1000, height = 1000, quality = 100,pointsize = 20, res=300);}
xcx=jeps[,Treatment];
ycy=jeps[,Mediator];väh=round(sd(ycy)/2,2)
a=ggplot(jeps, aes(y=ycy, x=xcx)) +
geom_point() +
xlab(Treatment) +
ylab(Mediator) +
geom_smooth(method="lm",col="black") + #https://ggplot2.tidyverse.org/reference/geom_smooth.html
annotate("text", x=min(xcx),y=max(ycy),hjust=0,vjust=0, label=paste0("r = ", round(r,5))) +
annotate("text", x=min(xcx),y=max(ycy)-väh,hjust=0,vjust=0, label=paste0("p = ", round(p.val, 5))) +
theme_classic()
print(a)
dev.off()
hesh=rbind(hesh,c(y[j],xnam[i],Group,r,p.val,rsadj))
}}
hesa=hesh
hoi=as.data.frame(hesh)
main_dir <- paste0(c("C://Users//patati//Desktop//TurkuOW//RWork//",fn),collapse="")
setwd(main_dir)
return(list(hopiu))
}
huus2=function(tv_all,hopiu) {
huus=c();heijaa=c('All','female','male');
for (hrt in 1:3) {
huus=append(huus,the_fun_figs(tv_all,heijaa[hrt],hopiu,aa,bb,fn))}
return(huus)}
aa=-0.5; bb=0.5; adj='nook'; sig.level=c(.001,0.01, 0.05)
fn='metabnorm//covScaled//non_fdr//'#
# metanorm_S_non_fdr=huus(tv_covscl,adj,sig.level) # This was already done above
# metanorm_S_fdr_non_tot=ldply(metanorm_S_non_fdr, data.frame) #Making the above ok for the next:
# non_fdr_check=huus2(tv_covscl,metanorm_S_fdr_non_tot) # This plots all the combinations, so it takes some time
# Now I'll be just showing some examples, but this works and if you drive this, you can find all the combos in the folders.
# E.g.: ".../RWork/metabnorm/covScaled/non_fdr/'Subject'/Hexcer/Correlations plotted All Hexcer S .jpg"
# fyi: do the 'subject' folders (all, male, fem.) separately
# library
library(rgl)
# This is to output a rgl plot in a rmarkdown document.
# setupKnitr()
# Data: the iris data is provided by R
data <- tv_covscl
# data=as.numeric(data)
var1='PFHxS'
var2='T/Epi-T'
var2='PE'
# Add a new column with color
# mycolors <- c('royalblue1', 'darkcyan', 'oldlace')
# data$color <- mycolors[ as.numeric(data$Species) ]
#
# Plot
plot3d(
y=data[,'PFHxS'], x=data[,'T/Epi-T'], z=data[,'PE'],
col = 'black',
type = 's',
radius = .2,
xlab="PFHxS", ylab="T/Epi-T", zlab="PE")
# data(trees)
data=data[,c('PFHxS','T/Epi-T','PE')]
s3d <- scatterplot3d(data, type = "h", color = "blue",angle = 55, scale.y = 0.7, pch = 16, main = "Scatter of Indirect Components")
# https://cran.r-project.org/web/packages/scatterplot3d/vignettes/s3d.pdf
install.packages("scatterplot3d")
# https://cran.r-project.org/web/packages/scatterplot3d/vignettes/s3d.pdf
install.packages("scatterplot3d")
library(scatterplot3d)
# data(trees)
data=data[,c('PFHxS','T/Epi-T','PE')]
s3d <- scatterplot3d(data, type = "h", color = "blue",angle = 55, scale.y = 0.7, pch = 16, main = "Scatter of Indirect Components")
my.lm <- lm(data[,'PFHxS'] ~ data[,'T/Epi-T'] + data[,'PE'])
s3d$plane3d(my.lm)
data(trees)
s3d <- scatterplot3d(trees, type = "h", color = "blue",angle = 55, scale.y = 0.7, pch = 16, main = "Adding elements")
my.lm <- lm(trees$Volume ~ trees$Girth + trees$Height)
s3d$plane3d(my.lm)
dev.off()
dev.off()
data(trees)
s3d <- scatterplot3d(trees, type = "h", color = "blue",angle = 55, scale.y = 0.7, pch = 16, main = "Adding elements")
my.lm <- lm(trees$Volume ~ trees$Girth + trees$Height)
s3d$plane3d(my.lm)
print(data, newpage = F)
data(trees)
s3d <- scatterplot3d(trees, type = "h", color = "blue",angle = 55, scale.y = 0.7, pch = 16, main = "Adding elements")
my.lm <- lm(trees$Volume ~ trees$Girth + trees$Height)
s3d$plane3d(my.lm)
s3d <- scatterplot3d(trees, type = "h", color = "blue",angle = 55, scale.y = 0.7, pch = 16, main = "Adding elements")
my.lm <- lm(trees$Volume ~ trees$Girth + trees$Height);s3d$plane3d(my.lm)
# data(trees)
data=data[,c('PFHxS','T/Epi-T','PE')]
s3d <- scatterplot3d(data, type = "h", color = "blue",angle = 55, scale.y = 0.7, pch = 16, main = "Scatter of Indirect Components")
my.lm <- lm(data[,'PFHxS'] ~ data[,'T/Epi-T'] + data[,'PE']);s3d$plane3d(my.lm)
dv.off()
data <- tv_covscl
# data=as.numeric(data)
var1='PFHxS'
var2='T/Epi-T'
var2='PE'
# Add a new column with color
# mycolors <- c('royalblue1', 'darkcyan', 'oldlace')
# data$color <- mycolors[ as.numeric(data$Species) ]
#
# Plot
plot3d(
y=data[,'PFHxS'], x=data[,'T/Epi-T'], z=data[,'PE'],
col = 'black',
type = 's',
radius = .2,
xlab="PFHxS", ylab="T/Epi-T", zlab="PE")
# data(trees)
data=data[,c('PFHxS','T/Epi-T','PE')]
s3d <- scatterplot3d(data, type = "h", color = "blue",angle = 55, scale.y = 0.7, pch = 16, main = "Scatter of Indirect Components")
my.lm <- lm(data[,'PFHxS'] ~ data[,'T/Epi-T'] + data[,'PE']);s3d$plane3d(my.lm)
scatterplot3d()
scatterplot3d(data)
s3d <- scatterplot3d(data, type = "h", color = "blue",angle = 55, scale.y = 0.7, pch = 16, main = "Scatter of Indirect Components")
my.lm <- lm(data[,'PFHxS'] ~ data[,'T/Epi-T'] + data[,'PE']);s3d$plane3d(my.lm)
s3d
s3d <- scatterplot3d(data, type = "h", color = "blue",angle = 55, scale.y = 0.7, pch = 16, main = "Scatter of Indirect Components")
my.lm <- lm(data[,'PFHxS'] ~ data[,'T/Epi-T'] + data[,'PE']);s3d$plane3d(my.lm)
