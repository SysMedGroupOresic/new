library(readxl)
all_all=read_xlsx(path = "C:/Users/patati/Desktop/TurkuOW/RWork/tests6/tests_basic/100basic All tikka3624 .xlsx") # #_1
# all_all=read_xlsx(path = "C:/Users/patati/Desktop/TurkuOW/RWork/hypo_basic/100 hypo_b_no_not sick All tikka221024 .xlsx") # #_2 :)
all_all=as.data.frame(all_all); all_all=all_all[!is.na(all_all[,1]),];rownames(all_all)=all_all[,1]; all_all=all_all[,2:dim(all_all)[2]]; all_all=all_all[rev(order(all_all[,1])),]
all_all=all_all; #all_all=all_all[all_all[,1]>0,]
#https://stats.stackexchange.com/questions/282155/causal-mediation-analysis-negative-indirect-and-total-effect-positive-direct
#https://www.researchgate.net/post/How_can_I_interpret_a_negative_indirect_effect_for_significant_mediation
#https://stackoverflow.com/questions/31518150/gsub-in-r-is-not-replacing-dot replacing dot
groups[,'Abbreviation'][groups[,'Abbreviation']=='17aOH-P4']='17a-OHP4'

#Switch = 0: PFAS vs steroids; switch=1: PFAS vs BAs and lipids, switch=2: steroids vs BAs and lipids (0-2 with both ACME and ADE (z='dir'))
houdees=function(hoi, rt2, switch,mn,z,corr,date,neg) {
  indir=c(); dir=c(); ip=c();rn=c();rn2=c()
  Outcome=colnames(tv_covNS)[c(29:51,59:71)]; #The final dataframe is shorter or the like so there were less variables here...
  Treatment=colnames(tv_covNS)[52:58];
  ##https://sparkbyexamples.com/r-programming/r-remove-from-vector-with-examples/

  #direct...
  if (switch==1) {
    Mediator_ok=Outcome[Outcome %in% names(table(hoi[1:dim(hoi)[1],c(3)]))]
    for (i in 1:7) {for (j in 1:length(Mediator_ok)) {
      if (z=='dir') {
      indir=append(indir,rt2[which(hoi[,1]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(5)]) #or c(1) hoi 1 or 5 (5 is orig)
      ip=append(ip,rt2[which(hoi[,1]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(6)])} else {
      indir=append(indir,rt2[which(hoi[,1]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(1)]) #or c(1) hoi 1 or 5 (5 is orig)
      ip=append(ip,rt2[which(hoi[,1]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(2)])}
      rn=append(rn,hoi[,3][which(hoi[,1]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1]]) #change this...
      rn2=append(rn2,hoi[,1][which(hoi[,1]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1]])
      
      Matrix <- matrix(0, nrow = length(Treatment), ncol = length(Mediator_ok))
      myData <- data.frame(matrix = Matrix)
      colnames(myData) <- Mediator_ok; rownames(myData) <- Treatment
      
      
    }}} else if (switch==0) {
      
      # indir:
      Mediator_ok=colnames(tv_all)[9:28][colnames(tv_all)[9:28] %in% names(table(hoi[1:dim(hoi)[1],c(2)]))]
      for (i in 1:7) {for (j in 1:length(Mediator_ok)) {
        if (z=='dir') {indir=append(indir,rt2[which(hoi[,1]==Treatment[i] & hoi[,2]==Mediator_ok[j])[1],c(5)]) #or c(1) hoi 1
        ip=append(ip,rt2[which(hoi[,1]==Treatment[i] & hoi[,2]==Mediator_ok[j])[1],c(6)])} else {
                indir=append(indir,rt2[which(hoi[,1]==Treatment[i] & hoi[,2]==Mediator_ok[j])[1],c(1)]) #or c(1) hoi 1
        ip=append(ip,rt2[which(hoi[,1]==Treatment[i] & hoi[,2]==Mediator_ok[j])[1],c(2)])}
        rn=append(rn,hoi[,2][which(hoi[,1]==Treatment[i] & hoi[,2]==Mediator_ok[j])[1]]) #change this...
        rn2=append(rn2,hoi[,1][which(hoi[,1]==Treatment[i] & hoi[,2]==Mediator_ok[j])[1]])
        
      Matrix <- matrix(0, nrow = length(Treatment), ncol = length(Mediator_ok))
      myData <- data.frame(matrix = Matrix)
      colnames(myData) <- Mediator_ok; rownames(myData) <- Treatment
        
        
      }}} else if (switch==2) {
        Treatment=colnames(tv_all)[9:28]; # These names are a bit mixed, by the idea is ok.
        Mediator_ok=Outcome[Outcome %in% names(table(hoi[1:dim(hoi)[1],c(3)]))]
        # df = data.frame(matrix("", nrow = length(Treatment), ncol = length(Mediator_ok))) 
        
    for (i in 1:length(Treatment)) {for (j in 1:length(Mediator_ok)) {
      if (z=='dir') {
      indir=append(indir,rt2[which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(5)]) #or c(1) hoi 1
      ip=append(ip,rt2[which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(6)])} else  {
      indir=append(indir,rt2[which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(1)]) #or c(1) hoi 1
      ip=append(ip,rt2[which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(2)])}

      rn=append(rn,hoi[,3][which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1]]) #change this...
      rn2=append(rn2,hoi[,2][which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1]])
      Matrix <- matrix(0, nrow = length(Treatment), ncol = length(Mediator_ok))
      myData <- data.frame(matrix = Matrix)
      colnames(myData) <- Mediator_ok; rownames(myData) <- Treatment
      
      
      }}} # You need three of these, yes :)
  
  tot=cbind(rn2,rn,indir) #or indir or dir
  tot=tot[!is.na(tot[,1]),]
  tot=as.data.frame(tot)#
  
  uu=data.frame();hou=c()
  
  if (neg=='no') {
  for (i in 1:length(Treatment)) {hou=names( table(tot[tot[,1]==Treatment[i],2])[table(tot[tot[,1]==Treatment[i],2])>0]);#print(hou)
  for (j in 1:length(hou)) {uu=rbind(uu, max(tot[tot[,1]==Treatment[i] & tot[,2]==hou[j],3]))}} #
  rr=data.frame()
  for (i in 1:length(Treatment)) {hou=names( table(tot[tot[,1]==Treatment[i],2])[table(tot[tot[,1]==Treatment[i],2])>0]);#print(hou)
  for (j in 1:length(hou)) {rr=rbind(rr, rownames(tot[tot[,3] == max(tot[tot[,1]==Treatment[i] & tot[,2]==hou[j],3]),]))}};uim=cbind(uu,rr);tot=tot[uim[,2],]}  else if (neg=='yes') {
  for (i in 1:length(Treatment)) {hou=names( table(tot[tot[,1]==Treatment[i],2])[table(tot[tot[,1]==Treatment[i],2])>0]);#print(hou)
  for (j in 1:length(hou)) {uu=rbind(uu, min(tot[tot[,1]==Treatment[i] & tot[,2]==hou[j],3]))}} #
  rr=data.frame()
  for (i in 1:length(Treatment)) {hou=names( table(tot[tot[,1]==Treatment[i],2])[table(tot[tot[,1]==Treatment[i],2])>0]);#print(hou)
  for (j in 1:length(hou)) {rr=rbind(rr, rownames(tot[tot[,3] == min(tot[tot[,1]==Treatment[i] & tot[,2]==hou[j],3]),]))}};uim=cbind(uu,rr);tot=tot[uim[,2],]} else if (neg=='else') {tot=tot}

  tot[,3]=as.numeric(tot[,3])
  
  library(reshape2)
  jops=dcast(tot, rn2~rn, value.var='indir')
  jops[is.na(jops)]=0
  rownames(jops)=jops[,1]
  jops=jops[,2:dim(jops)[2]]
  jops=as.data.frame(jops)
  jopsr=matrix(as.numeric(unlist(jops)),nrow=dim(jops)[1],ncol=dim(jops)[2])
  colnames(jopsr)=colnames(jops);rownames(jopsr)=rownames(jops)
  
  # print(dim(jopsr)[1] == dim(myData)[1]);print(dim(jopsr)[2] == dim(myData)[2])
  
  if (sum(!rownames(myData) %in% rownames(jopsr))>0) {
  to_df=rownames(myData)[!rownames(myData) %in% rownames(jopsr)]
  jopsr=rbind(jopsr,myData[to_df,]); jopsr=jopsr[rownames(myData),]}
  if (sum(!colnames(myData) %in% colnames(jopsr))>0) {
  to_df=colnames(myData)[!colnames(myData) %in% colnames(jopsr)]
  jopsr=cbind(jopsr,myData[,to_df]); jopsr=jopsr[,colnames(myData)]}
  # 

  # if (switch==1) {
  #   #for direct:
  #   jopsr=jopsr[,Outcome[Outcome %in% colnames(jopsr)]] #c
  # } else if (switch==0 ) {
  #   #for indirect:
  #   ums=groups[order(groups[,'Group']),'Abbreviation']
  #   jopsr=jopsr[,ums[ums %in% colnames(jopsr)]] 
  # }

  tot=cbind(rn2,rn,ip)
  tot=tot[!is.na(tot[,1]),]
  tot=as.data.frame(tot)
  if (neg=='no' | neg=='no' ) {tot=tot[uim[,2],]} else {tot=tot}
  tot[,3]=as.numeric(tot[,3])
  
  library(reshape2)
  jopsa=dcast(tot, rn2~rn, value.var='ip')
  jopsa[is.na(jopsa)]=0
  rownames(jopsa)=jopsa[,1]
  jopsa=jopsa[,2:dim(jopsa)[2]]
  jopsra=matrix(as.numeric(unlist(jopsa)),nrow=dim(jopsa)[1],ncol=dim(jopsa)[2])
  colnames(jopsra)=colnames(jopsa);rownames(jopsra)=rownames(jopsa)
  colnames(jopsra)=colnames(jopsa);rownames(jopsra)=rownames(jopsa)
  
  if (sum(!rownames(myData) %in% rownames(jopsra))>0) {
  to_df=rownames(myData)[!rownames(myData) %in% rownames(jopsra)]
  jopsra=rbind(jopsra,myData[to_df,]); jopsra=jopsra[rownames(myData),]}
  if (sum(!colnames(myData) %in% colnames(jopsra))>0) {
  to_df=colnames(myData)[!colnames(myData) %in% colnames(jopsra)]
  jopsra=cbind(jopsra,myData[,to_df]); jopsra=jopsra[,colnames(myData)]}
 

  # df

  
  if (switch==1) {
    #for direct:
    # jopsra=jopsra[,Outcome[Outcome %in% colnames(jopsra)]];
    # jopsr=jopsr[,Outcome[Outcome %in% colnames(jopsr)]] 
    # jopsra=jopsra[groups[,'Abbreviation'][groups[,'Abbreviation'] %in% rownames(jopsra)],]
    # jopsr=jopsr[groups[,'Abbreviation'][groups[,'Abbreviation'] %in% rownames(jopsr)],]
    
    
  } else if (switch==0) {
    #for indirect
    jopsra=jopsra[,groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsra)]]
    # jopsra=jopsra[,groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsra)]]
    #groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsra)]
    # jopsra=jopsra[,ums[ums %in% colnames(jopsr)]] 
    jopsr=jopsr[,groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsr)]] 
  } else if (switch==2) {
    jopsra=jopsra[groups[,'Abbreviation'],]
    jopsr=jopsr[groups[,'Abbreviation'],]
    # #groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsra)]
    # ums=groups[,'Abbreviation']
    # jopsra=jopsra[ums,];
    # jopsr=jopsr[ums,]
    } 
  
  setwd("C:/Users/patati/Desktop/TurkuOW/RWork/") #check this if needed...
  hip1='transpose';pch.cex=2; #width = 5000;height=2000 width = 2500;height=4000 width = 4000;height=2500;
  ho=paste('PFAS vs. bas and lipids_for the hypo_basic_colors_stea', switch)
  
  if (dim(jopsr)[1]==7) {width = 4000;height=1500} else if (dim(jopsr)[1]==20) {width = 4000;height=2500} else if (dim(jopsr)[1]==36) {width = 2500;height=5000}
  
  resulta1=jopsr
  p.mat.a1=jopsra
  #https://www.rdocumentation.org/packages/corrplot/versions/0.92/topics/corrplot
  #https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html
  #https://statisticsglobe.com/change-font-size-corrplot-r
  #order can be: alphabet, hclust, original #https://stackoverflow.com/questions/51115495/how-to-keep-order-of-the-correlation-plot-labels-as-same-in-the-datafile

  # if (switch==1) {rbo=rev(COL2('RdBu')[25:(length(COL2('RdBu'))-25)]) } else if (switch==0  | switch==2) {rbo=rev(COL2('RdBu')[25:100]) } 
  # This has been driven:
  
  # resulta1=resulta1[,colnames(resulta2)] #In case you need the column names elsewhere
  
  # for (i in 1:dim(resulta1)[1]) {for (j in 1:dim(resulta1)[2]) {if (resulta1[i,j]==0) {p.mat.a1[i,j]=0.5}}}
  
  # p.mat.a1$column <- unlist(p.mat.a1$column)
  # resulta1$column <- unlist(resulta1$column)
  # resulta1 <- as.matrix(resulta1); resulta1 <- as.matrix(p.mat.a1)

  
  # resulta1 <- as.matrix(m1);p.mat.a1 <- as.matrix(m4)
  # resulta1 <- as.matrix(the_real);p.mat.a1 <- as.matrix(the_real2)
  # rbo=rev(COL2('RdBu')[25:(length(COL2('RdBu'))-25)])

  # With the neg. you do not put these:
  if (dim(resulta1)[2]==36) {
  Outcome=colnames(tv_covNS)[c(29:51,59:71)];
  Outcome=Outcome[c(1,23,2:22,24:length(Outcome))]
  resulta1=resulta1[,Outcome[Outcome %in% colnames(resulta1) ]];p.mat.a1=p.mat.a1[,Outcome[Outcome %in% colnames(p.mat.a1) ]] }
  
  for (i in 1:dim(resulta1)[1]) {for (j in 1:dim(resulta1)[2]) {if (resulta1[i,j]==0) {p.mat.a1[i,j]=0.5}}} 
  
  # resulta1 <- t(resulta1);
  # p.mat.a1 <- t(p.mat.a1)
  
  # ou=round(min(c(abs(max(resulta1)),abs(min(resulta1)))),2)
  # op=ou-0.01
  
  # resulta1[resulta1 > 0.4] = 0.4
  # resulta1[resulta1 < -0.4] = - 0.4
  # hist(as.numeric(unlist(resulta1)),breaks=30,ylim=c(0.0,40))  #xlim=c(0.04,0.4),
  # resulta1[resulta1 > 1]  = 1
  # resulta1[resulta1 < -1] = -1 #col.lim=c(-0.4,0.4))
 
  path="C:/Users/patati/Documents/GitHub/new/"; setwd(path) #check this if needed...
  jpeg(paste("Heatmap of high ACMEs_mmaaaee",date, mn,".jpg"), width = width, height = height, quality = 100,pointsize = 14, res=300);# par( ps=ps)# par(cex.lab=90) 22 18
  # col = brewer.pal(n = 9, name = "YlOrRd")
  order="original"; range='orig';corre='no_renormaa'; type='full'; method='color';ga='All';gf='Female';gm='Male' #color square
  cl.offset=20;cl.length=12;cl.cex = 1.25;pch.cex=1.25;pch=2;cl.pos = 'r'; #cl.offset=2;cl.length=5;cl.cex = 1.3;pch.cex=1.95;pch=14;
  
  col=colorRampPalette(c('blue', 'white','orange'), alpha = TRUE)(150)
  if (mn=='idirpos') {col=colorRampPalette(c( 'white','orange'), alpha = TRUE)(150)} else if (mn=='idirneg') 
    {col=colorRampPalette(c('blue', 'white'), alpha = TRUE)(150)} else {col=col}

  

  # if (corr==TRUE) {if (min(as.matrix(resulta1))< -1  | max(as.matrix(resulta1))> 1) {resulta1=rango(resulta1,-1,1)}} else if (min(as.matrix(resulta1)) >= 0)  {resulta1=rango(resulta1,-1,1)} #
  # resulta1=rango(resulta1,-1,1)
  # if (min(as.matrix(resulta1)) >= 0  | max(as.matrix(resulta1)) <= 0) {resulta1=rango(resulta1,-1,1)}

  corrplot(as.matrix(resulta1), type = type, order = order,method=method, p.mat=as.matrix(p.mat.a1), tl.col = "black", #sum(COL2('RdBu')=="#FF7417")
           cl.cex = cl.cex, pch.cex=pch.cex, pch.col='black',pch=pch,#pitikö vain pch lisätä pch väriin väriin... mystistä...'#FEE12B'
           sig.level = c(.000005,0.05),cl.pos = cl.pos, insig = "label_sig", cl.offset=cl.offset,cl.length=cl.length, #.001, .05, .2
           tl.srt = 90, diag = TRUE,col=col,is.corr = corr) #only in age...0.001, #rev(COL2('RdBu')[25:(length(COL2('RdBu'))-25)]) col.lim=c(-1,1)
  #non were significant in neg... but after mody yes!

  dev.off()
  
  return(list(resulta1,p.mat.a1))
  }

# Switch = 0: PFAS vs steroids; switch=1: PFAS vs BAs and lipids, 
# switch=2: steroids vs BAs and lipids (0-2 with both ACME and ADE (z='dir'))
# corr=TRUE;z='idir' # uliulie2=houdees(hoi, switch=1,mn='indiruush',z,corr,date); dim(uliulie2[[1]]) 

# #Let's get this comparable done:
# # First the 'matrisse'
# u3=all_all; c1=c(); mn='basicas' #
# c1= u3 #[u3[,'ADE'] < ADEMedian  & DV<ADEVar,] #& u3[,'z0.p']<ADEpval
# # c1 = c1[ ((c1[,'ACME']-c1[,'ADE']) > 0), ] #
# c1 = c1[c1[,'d0.p']<0.49, ];
# c1= c1[sample(1:nrow(c1)), ];
# # c1=c1[rev(order(c1[,'ACME'])),];
# # c1=c1[c1[,'ACME'] >= 0,] # -0.01,]#quantile(c1[,'ACME'])[2]
# rt2=c1[complete.cases(c1), ] #0.49 is optimal p value cutoff to get dim(mat[[2]])[2] as 36
# hoi = c(); hoi=scan(text=rownames(rt2), what="")#scan(text=rownames(rt2), what="")
# hoi = matrix(hoi, ncol = 3,  byrow = TRUE); colnames(hoi)=c('Contaminants','Steroids','Bile Acids or Lipids')#,'Gender') ,'Desig.')
# hoi[,c(2)]  <- gsub("\\.", "-",  hoi[,c(2)]  ); hoi[,'Steroids' ][hoi[,'Steroids' ]=='17aOH-P4']='17a-OHP4'
# corr=FALSE;z='dir'; switch=0;
# mat=houdees(hoi, rt2, switch,mn,z,corr,date);dim(mat[[2]])[2] # Indirect effect, kasvata... dim(mat[[2]])[2] == 36

corr=FALSE;z='dir'; switch=0; 

u3=all_all;
c1=c() #
c1= u3 #[u3[,'ADE'] < ADEMedian  & DV<ADEVar,] #& u3[,'z0.p']<ADEpval
# c1=c1[rev(order(c1[,'ADE'])),]; #
c1=c1[rev(order(c1[,'ACME'])),];
# c1= c1[sample(1:nrow(c1)), ];
# c1=c1[ ((c1[,'ADE']-c1[,'ACME']) > 0), ] #
# c1=c1[c1[,'z0.p'] < 0.99, ] #0.98/0.81/0.45/0.53/0.1... but gives 33 columns so use the other then.. 
c1=c1[c1[,'d0.p'] < 0.49, ]
 #let us start with the above optima... 643/or similar is dim(c1)[1] so need higher p to get all; (dim(c1)[1]-1)
#Check if this needs to be ADE instead...
# c3=c1[c1[,'ADE'] < 0,] # -0.01,]#quantile(c1[,'ACME'])[2] 
c3=c1[c1[,'ACME'] < 0,]
# 
# c3= c3[sample(1:nrow(c3)), ];
c1=c3;
rt2=c1[complete.cases(c1), ]
hoi=c(); hoi=scan(text=rownames(rt2), what="")#scan(text=rownames(rt2), what="")
hoi=matrix(hoi, ncol = 3,  byrow = TRUE); colnames(hoi)=c('Contaminants','Steroids','Bile Acids or Lipids')#,'Gender') ,'Desig.')
hoi[,c(2)]  <- gsub("\\.", "-",  hoi[,c(2)]  ); hoi[,'Steroids' ][hoi[,'Steroids' ]=='17aOH-P4']='17a-OHP4'
# mat_neg=list(c(1,2),c(3,4))
mn=paste0(z,'neg');neg='yes'
mat_neg=houdees(hoi, rt2, switch,mn,z,corr,date,neg); 
dim(mat_neg[[2]])[2]  #kasvata n, jotta dim(mat_pos[[2]])[2] yhtäkuin kuin length(c(x3,x6)), i.e. 36

u3=all_all; c1=c(); #mn='posae'
c1= u3 #[u3[,'ADE'] < ADEMedian  & DV<ADEVar,] #& u3[,'z0.p']<ADEpval
c1=c1[rev(order(c1[,'ACME'])),]; #Check acmes and ades
# c1=c1[rev(order(c1[,'ADE'])),]; 
# c1=c1[ ((c1[,'ACME']-c1[,'ADE']) > 0), ] #
c1=c1[c1[,'d0.p']<0.49, ] # Let me uset the same optimal value as above 0.33
# c1=c1[c1[,'z0.p']<0.99, ]
# c2=c1[rev(order(c1[,'ACME'])),]; #350 is optimal as per hand driven optimization 280; check if this needs to be ACME/ADE
c2=c1[c1[,'ACME'] > 0,] #c2[c1[,'ACME']>0.01,]#quantile(c1[,'ACME'])[3]
# c2=c1[c1[,'ADE'] > 0,] 
c1=c2; # 
# c1= c1[sample(1:nrow(c1)), ];
rt2=c1[complete.cases(c1), ] # rt2[1,]=rt2[1,]
hoi=c(); hoi=scan(text=rownames(rt2), what="")#scan(text=rownames(rt2), what="")
hoi=matrix(hoi, ncol = 3,  byrow = TRUE); colnames(hoi)=c('Contaminants','Steroids','Bile Acids or Lipids')#,'Gender') ,'Desig.')
hoi[,c(2)]  <- gsub("\\.", "-",  hoi[,c(2)]  ); hoi[,'Steroids' ][hoi[,'Steroids' ]=='17aOH-P4']='17a-OHP4'
mn=paste0(z,'pos'); neg='no'
mat_pos=houdees(hoi, rt2, switch,mn,z,corr,date,neg='pos');dim(mat_pos[[2]])[2] #kasvata n, jotta dim(mat_pos[[2]])[2] yhtäkuin kuin length(c(x3,x6)), i.e. 36

mg=mat_pos[[1]]
ma=mat_neg[[1]]
# hist(as.numeric(unlist(ma)),breaks=30)  #xlim=c(0.04,0.4), ylim=c(0.0,20),xlim=c(-0.5,0.5)
# hist(as.numeric(unlist(mg)),breaks=30)  #xlim=c(0.04,0.4), ylim=c(0.0,20),xlim=c(-0.5,0.5)
totu = mg < quantile(as.numeric(unlist(mat_pos[[1]]))[as.numeric(unlist(mat_pos[[1]]))>0.01],0.05) #0.19
rpl=ma[totu]
mg[totu]=rpl
mgg=mat_pos[[2]]
maa=mat_neg[[2]]
rpl2=maa[totu]
mgg[totu]=rpl2
# 
# hist(as.numeric(unlist(ma)),breaks=30)  #xlim=c(0.04,0.4), ylim=c(0.0,20),xlim=c(-0.5,0.5)
# hist(as.numeric(unlist(mg)),breaks=30)  #xlim=c(0.04,0.4), ylim=c(0.0,20),xlim=c(-0.5,0.5)
# 

# Eli nollat ja liian lähellä negatiiviset nollat on tässä tulkittu positiivisiksi ACME:iksi, johtuen myös mediaanien erosta (neg puoli vs pos puoli)
mg=mat_pos[[1]]
ma=mat_neg[[1]]
totu = ma > quantile(as.numeric(unlist(mat_neg[[1]]))[as.numeric(unlist(mat_neg[[1]])) < -0.01],0.95) #-0.09; 0.8 #median(as.numeric(unlist(mat_neg[[1]]))[as.numeric(unlist(mat_neg[[1]])) < -0.01]) #tässä tätä mediaanieroa, vrt. yllä oleva
rpl=mg[totu] # ei neg adessa
ma[totu]=rpl
mgg=mat_pos[[2]]
maa=mat_neg[[2]]
rpl2=mgg[totu]
maa[totu]=rpl2

# the_real=c();the_real <- matrix(0, nrow = dim(mat[[1]])[1], ncol = dim(mat[[1]])[2]); the_real <- data.frame( the_real)
# colnames(the_real) <- colnames(mat[[1]]); rownames(the_real) <- rownames(mat[[1]])
# the_real2=c();the_real2 <- matrix(0, nrow = dim(mat[[1]])[1], ncol = dim(mat[[1]])[2]); the_real2 <- data.frame(the_real2)
# colnames(the_real2) <- colnames(mat[[1]]); rownames(the_real2) <- rownames(mat[[1]])
# m1=mat[[1]]# m2=mat_pos[[1]]# m3=mat_neg[[1]]# m4=mat[[2]]# m5=mat_pos[[2]]# m6=mat_neg[[2]]
# # m3=m3[,Outcome[Outcome %in% colnames(m3) ]]; m6=m6[,Outcome[Outcome %in% colnames(m6) ]] 
# for (i in rownames(m2)) {for (j in colnames(m2)) {if (m2[i,j]==0) {the_real[i,j]=m1[i,j];the_real2[i,j]=m4[i,j]}}}
# for (i in rownames(m3)) {for (j in colnames(m3)) {if (m3[i,j]==0) {the_real[i,j]=m1[i,j];the_real2[i,j]=m4[i,j]}}}
# for (i in rownames(m2)) {for (j in colnames(m2)) {if (m5[i,j]<0.1) {the_real[i,j]=m2[i,j];the_real2[i,j]=m5[i,j]}}}
# for (i in rownames(m3)) {for (j in colnames(m3)) {if (m6[i,j]<0.1) {the_real[i,j]=m3[i,j];the_real2[i,j]=m6[i,j]}}}

resulta1_big_id=mg #ma
p.mat.a1_big_id=mgg #maa
resulta1_big_id=ma
p.mat.a1_big_id=maa
# resulta1_ade1=the_real
# p.mat.a1_ade1=the_real2
resulta1 <- as.matrix(resulta1_big_id);p.mat.a1 <- as.matrix(p.mat.a1_big_id)
resulta1[is.na(resulta1)]=0
# With the neg. you do not put these:
if (dim(resulta1)[2]==36) {
Outcome=colnames(tv_covNS)[c(29:51,59:71)];
Outcome=Outcome[c(1,23,2:22,24:length(Outcome))]
resulta1=resulta1[,Outcome[Outcome %in% colnames(resulta1) ]];p.mat.a1=p.mat.a1[,Outcome[Outcome %in% colnames(p.mat.a1) ]] }
for (i in 1:dim(resulta1)[1]) {for (j in 1:dim(resulta1)[2]) {if (resulta1[i,j]==0) {p.mat.a1[i,j]=0.5}}}
# resulta1 <- t(resulta1);
# p.mat.a1 <- t(p.mat.a1)
# hist(as.numeric(unlist(resulta1)),breaks=30,ylim=c(0.0,40))  #xlim=c(0.04,0.4),
# heps=abs(round((min(resulta1)-0.1),1))
# heps2=abs(round((min(resulta1)+0.01),2))
# resulta1[resulta1 > heps] = heps
# resulta1[resulta1 < -heps2] = -heps #so this extends the minimum value to the (max) min limit so as to get the true blue to be seen, at least once
# 
# #In addition, you would need:
# heps=abs(round((min(resulta1)),1))
# heps2=abs(round((min(resulta1)+0.01),2))
# resulta1[resulta1 > heps] = heps
# resulta1=abs(min(resulta1))+resulta1
# resulta1[resulta1 < 0] = 0 #so this extends the minimum value to the (max) min limit so as to get the true blue to be seen, at least once
# resulta1[resulta1 > 1]  = 1
# resulta1[resulta1 < -1] = -1 #col.lim=c(-0.4,0.4))
path="C:/Users/patati/Documents/GitHub/new/"; setwd(path) #check this if needed...
if (dim(resulta1)[1]==7) {width = 4000;height=1500} else if (dim(resulta1)[1]==20) {width = 4000;height=2500} else if (dim(resulta1)[1]==36) {width = 2500;height=5000}
jpeg(paste("Heatmap of highed_mgg_acmeside_2d_v2",z,date,".jpg"), width = width, height = height, quality = 100,pointsize = 14, res=300);# par( ps=ps)# par(cex.lab=90) 22 18
# col = brewer.pal(n = 9, name = "YlOrRd")
col=colorRampPalette(c('blue', 'white','orange'), alpha = TRUE)(150)

# col=colorRampPalette(c('white','orange'), alpha = TRUE)(150)
# col=colorRampPalette(c('blue','white'), alpha = TRUE)(150)


order="original"; range='orig';corre='no_renormaa'; type='full'; method='color';ga='All';gf='Female';gm='Male' #color square
cl.offset=25;cl.length=13;cl.cex = 1.1;pch.cex=1.95;pch=3;cl.pos = 'r'; #cl.offset=2;cl.length=5;cl.cex = 1.3;pch.cex=1.95;pch=14;
# if (switch==1) {rbo=rev(COL2('RdBu')[25:(length(COL2('RdBu'))-25)]) } else if (switch==0  | switch==2) {rbo=rev(COL2('RdBu')[25:100])}
# col=colorRampPalette(c( 'white','orange'), alpha = TRUE)(150)
# resulta1=rango(resulta1,-1,1)
# if (min(as.matrix(resulta1))< -1  | max(as.matrix(resulta1))> 1) {resulta1=rango(resulta1,-1,1)}
corrplot(resulta1, type = type, order = order,method=method, p.mat=p.mat.a1, tl.col = "black", #sum(COL2('RdBu')=="#FF7417")
         cl.cex = cl.cex, pch.cex=pch.cex, pch.col='black',pch=pch,#pitikö vain pch lisätä pch väriin väriin... mystistä...'#FEE12B'
         sig.level = c(0.05),cl.pos = cl.pos, insig = "label_sig", cl.offset=cl.offset,cl.length=cl.length,
         tl.srt = 90, diag = TRUE,col=col,is.corr = FALSE) #only in age...0.001, -2,2 #rev(COL2('RdBu')[25:(length(COL2('RdBu'))-25)]) col.lim=c(min(resulta1),max(resulta1)) col.lim=c(-heps,heps)
# 
dev.off() #
path="C:/Users/patati/Documents/GitHub/new/"; setwd(path)
  
  